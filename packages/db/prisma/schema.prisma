// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id String @id @default(cuid())
  name String 
  email String @unique
  provider String? // e.g., 'google', 'github'
  providerId String? @unique
  avatar String?
  password String 
  projects Project[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project{
  id String @id @default(cuid())
  title String 
  user_id String
  user User @relation(fields: [user_id], references: [id])
  conversation_history ConversationHistory[]
  prompts Prompt[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Prompt{
  id  String @id @default(cuid())
  project_id String
  project Project @relation(fields: [project_id], references: [id]) 
  content String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ConversationHistory{
  id String @id @default(cuid())
  project_id String
  project Project @relation(fields: [project_id], references: [id])
  type ConversationType 
  from MessageFrom
  contents String
  hidden Boolean @default(false)
  toolCall ToolCall?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ConversationType {
  TOOL_CALL
  TEXT_MESSAGE
}

enum MessageFrom {
  USER
  ASSISTANT
}

enum ToolCall {
 READ_FILE
 WRITE_FILE
 DELETE_FILE
 UPDATE_FILE 
}